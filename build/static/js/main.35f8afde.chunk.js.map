{"version":3,"sources":["Galeria/styles.ts","libs/firebase.ts","services/photos.ts","components/PhotoItem/styles.ts","components/PhotoItem/PhotoItem.tsx","Galeria/Galeria.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","div","Area","Header","h1","ScreenWarning","PhotosList","UploadForm","form","firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseStorage","getStorage","getAll","a","list","imagesFolder","ref","listAll","photoList","items","i","getDownloadURL","photoUrl","push","name","url","insert","file","includes","type","randomName","createId","newFile","uploadBytes","upload","Error","PhotoItem","src","alt","Galeria","useState","loading","setLoading","photos","setPhotos","uploading","setUploading","useEffect","Photos","getPhotos","handleFormSubmit","e","preventDefault","formData","FormData","currentTarget","get","size","result","alert","message","newPhotosList","method","onSubmit","value","role","aria-label","length","map","item","index","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEaA,EAAYC,IAAOC,IAAV,sHAOTC,EAAOF,IAAOC,IAAV,sFAMJE,EAASH,IAAOI,GAAV,wGAONC,EAAgBL,IAAOC,IAAV,sHASbK,EAAaN,IAAOC,IAAV,sGAMVM,EAAaP,IAAOQ,KAAV,goB,uBCzBjBC,EAAcC,YATG,CACrBC,OAAQC,0CACRC,WAAYD,iCACZE,UAAWF,iBACXG,cAAeH,6BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKIM,EAAkBC,YAAWV,G,QCT7BW,EAAM,uCAAG,oCAAAC,EAAA,6DAChBC,EAAgB,GAEdC,EAAeC,YAAIN,EAAiB,UAHtB,SAIIO,YAAQF,GAJZ,OAIdG,EAJc,cAAAL,EAAA,KAMNK,EAAUC,OANJ,qDAMXC,EANW,qBAOGC,YAAeH,EAAUC,MAAMC,IAPlC,QAOdE,EAPc,OASlBR,EAAKS,KAAK,CACRC,KAAMN,EAAUC,MAAMC,GAAGI,KACzBC,IAAKH,IAXW,gDAebR,GAfa,4CAAH,qDAkBNY,EAAM,uCAAG,WAAOC,GAAP,qBAAAd,EAAA,0DAChB,CAAC,aAAc,YAAa,aAAae,SAASD,EAAKE,MADvC,wBAEdC,EAAaC,cACbC,EAAUhB,YAAIN,EAAD,iBAA4BoB,IAH3B,SAICG,YAAYD,EAASL,GAJtB,cAIdO,EAJc,gBAKGb,YAAea,EAAOlB,KALzB,cAKdM,EALc,yBAMX,CACLE,KAAMU,EAAOlB,IAAIQ,KACjBC,IAAKH,IARW,iCAWX,IAAIa,MAAM,sCAXC,4CAAH,sDCrBN5C,EAAYC,IAAOC,IAAV,mNCeP2C,EATG,SAAC,GAAmC,IAAjCX,EAAgC,EAAhCA,IAAKD,EAA2B,EAA3BA,KACxB,OACE,kBAAC,EAAD,KACE,yBAAKa,IAAKZ,EAAKa,IAAKd,IACnBA,ICoEQe,EA1EC,WACd,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAkB,IAA9C,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,YACO,uCAAG,sBAAAlC,EAAA,6DAChB6B,GAAW,GADK,KAEhBE,EAFgB,SAEAI,IAFA,kCAGhBN,GAAW,GAHK,2CAAH,qDAKfO,KACC,IAEH,IAAMC,EAAgB,uCAAG,WAAOC,GAAP,qBAAAtC,EAAA,yDACvBsC,EAAEC,iBACIC,EAAW,IAAIC,SAASH,EAAEI,kBAC1B5B,EAAO0B,EAASG,IAAI,WACd7B,EAAK8B,KAAO,GAJD,wBAKrBX,GAAa,GALQ,SAMFE,EAAcrB,GANZ,OAMjB+B,EANiB,OAOrBZ,GAAa,GAETY,aAAkBvB,MACpBwB,MAAM,GAAD,OAAID,EAAOlC,KAAX,cAAqBkC,EAAOE,YAE7BC,EADC,YACmBlB,IACVpB,KAAKmC,GACnBd,EAAUiB,IAdS,4CAAH,sDAmBtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,0BAEA,kBAAC,EAAD,CAAcC,OAAO,OAAOC,SAAUb,GACpC,2BAAOrB,KAAK,OAAOL,KAAK,UACxB,2BAAOK,KAAK,SAASmC,MAAM,WAC1BnB,GAAa,wBAGfJ,GACC,kBAAC,EAAD,KACE,0BAAMwB,KAAK,MAAMC,aAAW,cAA5B,gBAGA,gDAGFzB,GAAWE,EAAOwB,OAAS,GAC3B,kBAAC,EAAD,KACGxB,EAAOyB,KAAI,SAACC,EAAMC,GAAP,OACV,kBAAC,EAAD,CAAWC,IAAKD,EAAO7C,IAAK4C,EAAK5C,IAAKD,KAAM6C,EAAK7C,YAIrDiB,GAA6B,IAAlBE,EAAOwB,QAClB,kBAAC,EAAD,KACE,0BAAMF,KAAK,MAAMC,aAAW,cAA5B,gBAGA,qEAC8B,6BAD9B,yCC/DGM,MAJf,WACE,OAAO,kBAAC,EAAD,OCUMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35f8afde.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: #27282f;\n  color: #fff;\n  min-width: 980px;\n  font-family: arial;\n`;\n\nexport const Area = styled.div`\n  margin: auto;\n  max-width: 980px;\n  padding: 30px 0;\n`;\n\nexport const Header = styled.h1`\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const ScreenWarning = styled.div`\n  text-align: center;\n\n  .emoji {\n    font-size: 50px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const PhotosList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 10px;\n`;\n\nexport const UploadForm = styled.form`\n  background-color: #3d3f43;\n  padding: 15px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n\n  input[type=\"file\"] {\n    background-color: #756df4;\n    border: 0;\n    color: #fff;\n    padding: 8px 16px;\n    font-size: 15px;\n    border-radius: 10px;\n    margin: 0 20px;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.9;\n    }\n  }\n\n  input[type=\"submit\"] {\n    background-color: #756df4;\n    border: 0;\n    color: #fff;\n    padding: 8px 16px;\n    font-size: 15px;\n    border-radius: 10px;\n    margin: 0 20px;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.9;\n    }\n  }\n`;\n","import { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nexport const firebaseStorage = getStorage(firebaseApp);\n","import { getDownloadURL, listAll, ref, uploadBytes } from \"@firebase/storage\";\nimport { firebaseStorage } from \"../libs/firebase\";\nimport { Photo } from \"../types/Photo\";\nimport { v4 as createId } from \"uuid\";\n\nexport const getAll = async () => {\n  let list: Photo[] = [];\n\n  const imagesFolder = ref(firebaseStorage, \"images\");\n  const photoList = await listAll(imagesFolder);\n\n  for (let i in photoList.items) {\n    let photoUrl = await getDownloadURL(photoList.items[i]);\n\n    list.push({\n      name: photoList.items[i].name,\n      url: photoUrl,\n    });\n  }\n\n  return list;\n};\n\nexport const insert = async (file: File) => {\n  if ([\"image/jpeg\", \"image/jpg\", \"image/png\"].includes(file.type)) {\n    let randomName = createId();\n    let newFile = ref(firebaseStorage, `images/${randomName}`);\n    let upload = await uploadBytes(newFile, file);\n    let photoUrl = await getDownloadURL(upload.ref);\n    return {\n      name: upload.ref.name,\n      url: photoUrl,\n    } as Photo;\n  } else {\n    return new Error(\"Tipo de arquivo n√£o permitido.\");\n  }\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: #3d3f43;\n  border-radius: 10px;\n  padding: 10px;\n\n  img {\n    max-width: 100%;\n    display: block;\n    margin-bottom: 10px;\n    border-radius: 10px;\n  }\n`;\n","import React from \"react\";\nimport * as C from \"./styles\";\n\ntype PhotoItemProps = {\n  url: string;\n  name: string;\n};\n\nconst PhotoItem = ({ url, name }: PhotoItemProps) => {\n  return (\n    <C.Container>\n      <img src={url} alt={name} />\n      {name}\n    </C.Container>\n  );\n};\n\nexport default PhotoItem;\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport * as C from \"./styles\";\nimport * as Photos from \"../services/photos\";\nimport { Photo } from \"../types/Photo\";\nimport PhotoItem from \"../components/PhotoItem\";\n\nconst Galeria = () => {\n  const [loading, setLoading] = useState(false);\n  const [photos, setPhotos] = useState<Photo[]>([]);\n  const [uploading, setUploading] = useState(false);\n\n  useEffect(() => {\n    const getPhotos = async () => {\n      setLoading(true);\n      setPhotos(await Photos.getAll());\n      setLoading(false);\n    };\n    getPhotos();\n  }, []);\n\n  const handleFormSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const file = formData.get(\"image\") as File;\n    if (file && file.size > 0) {\n      setUploading(true);\n      let result = await Photos.insert(file);\n      setUploading(false);\n\n      if (result instanceof Error) {\n        alert(`${result.name} - ${result.message}`);\n      } else {\n        let newPhotosList = [...photos];\n        newPhotosList.push(result);\n        setPhotos(newPhotosList);\n      }\n    }\n  };\n\n  return (\n    <C.Container>\n      <C.Area>\n        <C.Header> Galeria de Fotos</C.Header>\n        {/* Area Upload */}\n        <C.UploadForm method=\"POST\" onSubmit={handleFormSubmit}>\n          <input type=\"file\" name=\"image\" />\n          <input type=\"submit\" value=\"Enviar\" />\n          {uploading && \"Enviando arquivo....\"}\n        </C.UploadForm>\n        {/* Lista de Fotos */}\n        {loading && (\n          <C.ScreenWarning>\n            <span role=\"img\" aria-label=\"carregando\">\n              üñê\n            </span>\n            <div>Carregando...</div>\n          </C.ScreenWarning>\n        )}\n        {!loading && photos.length > 0 && (\n          <C.PhotosList>\n            {photos.map((item, index) => (\n              <PhotoItem key={index} url={item.url} name={item.name} />\n            ))}\n          </C.PhotosList>\n        )}\n        {!loading && photos.length === 0 && (\n          <C.ScreenWarning>\n            <span role=\"img\" aria-label=\"carregando\">\n              üòî\n            </span>\n            <div>\n              N√£o h√° imagens disnpon√≠veis <br /> (diret√≥rio pode estar vazio).\n            </div>\n          </C.ScreenWarning>\n        )}\n      </C.Area>\n    </C.Container>\n  );\n};\n\nexport default Galeria;\n","import React from \"react\";\nimport Galeria from \"./Galeria/Galeria\";\n\nfunction App() {\n  return <Galeria />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}